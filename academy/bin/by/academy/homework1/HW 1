Часть 1
Все задания должны быть написаны в одном проекте. Для каждой задачи свой класс.
Все классы должы лежать в пакете by.academy.homework1
Помним о code convention.
have fun :)

Задание 1.
Ввести с консоли сумму покупки в магазине и возраст покупателя, 
в зависимости от суммы вывести на экран ФИНАЛЬНУЮ ЦЕНУ с учетом скидки.

	Скидки:
	1) Сумма до 100 рублей -> 5%
	2) Сумма от 100 рублей включая до 200 рублей не включая -> 7%
	3) Сумма от 200 рублей включая до 300 рублей не включая -> 12%
	4) Сумма от 300 рублей включая до 400 рублей не включая -> 15%
	5) Сумма покупки больше 400 рублей включая -> 20%

В случае, если сумма покупки находится в 3 интервале (сумма от 200 рублей включая до 300 рублей не включая) 
и возраст покупателя больше, чем 18 лет -> добавить 4% к скидке (12 + 4), иначе -> отнять 3%. 

Задание 2.
Используем switch/case. Ввести с консоли тип данных(созраняем в String) и переменную, вывести на экран:
	a) если тип данных int, вывести остаток от деления на 2
	b) если double, вывести 70% от числа 
	c) если float, возвести в квадрат
	d) если char, вывести код символа (charAt(0))
	e) String, вывести на экран строку в виде ("Hello " + переменная)
	f) во всех остальных случаях вывести на экран ("Unsupported type");

Задание 3.
Ввести с консоли число от 1 до 10, вывести на экран таблицу умножения для этого числа. (10 чисел).

Задание 4.
Выводить на консоль степень двойки, пока результат не будет больше, чем 1_000_000. 

Часть 2
Закончить класс Cat.

1) Создать java проект с именем academy (если не создан). 
Правый клик мышкой в окне Package explorer -> New -> Java Project.
Вводим имя проекта (academy) -> Finish
2) Создаем package в src папке с именем by.academy.lesson2.classwork
3) Создаем класс Application в созданом пакете из пункта 2.
Добавим метод:
public static void main(String ...args){
}
Эта точка входа в ваше приложение!

4) Создаем класс Cat в созданом пакете из пункта 2.
4.1) Добавить поле типа int (целочисленное значение) с именем age (возраст).
4.2) Добавить поле типа String (целочисленное значение) с именем nickname (кличка кота).
4.3) Добавить метод, в котором вы будете добавлять один год вашему коту:
pulbic void grow(){
// add code here
}

4.4) Добавить метод, в котором вы будете выводить на консоль "Кот спит":
pulbic void sleep(){
// add code here
}

4.5) Добавить метод, в котором вы будете выводить на консоль "Кот ест":
pulbic void eat(){
// add code here
}

4.5) Добавить метод, в котором вы будете выводить на консоль "Кот гуляет":
pulbic void walk(){
// add code here
}

4.6) Добавить конструктор без параметров:
pulbic Cat(){
// nothing
}

4.7) Добавить конструктор с параметром nickname чтобы назвать кота:
pulbic Cat(String nickname){
// add code here
}

5) В классе Application создать 2 кота, одного без имени, второго с именем.
6) Вызовите методы eat, sleep, walk у кота с именем.
7) Вызовите методы grow у второго кота без имени 3 раза и выведите на экран его возраст.
8) Добавить поле money в класс Cat, добавить методы getMoney и setMoney, которые будут возвращать и назначать значение money соответственно.
9) Добавить поле initials(инициалы), которое будет хранить первую букву клички кота, подумать над типом, написать метод getInitials/setInitials, которые будут возвращать и сетать значение initials соответственно.
10) Добавить поле isHomeAnimal(является ли домашним животным). Подумать над типом, написать метод isHomeAnimal/setIsHomeAnimal, которые будут возвращать и назначать значение isHomeAnimal соответственно.